import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Link } from 'react-router-dom';
import { Trophy, Star, TrendingUp, Smile, DollarSign, ArrowRight } from 'lucide-react';
import PublicNavBar from '../components/PublicNavBar';
import Footer from '../components/Footer';
import { useLanguage } from '../context/LanguageContext';

const restaurantPageTranslations = {
  en: {
    title: 'Restaurants',
    subtitle: 'Turn Happy Diners into 5-Star Marketers',
    intro:
      "Running a great restaurant isn't enough anymore. Even if your dishes are divine and your service is flawless, you're invisible online if you don't have a strong review game.",

    problem_title: 'The problem?',
    problem_text:
      "Happy guests rarely leave a review unless nudged. Meanwhile, one annoyed customer? They'll shout from the rooftops. This imbalance kills your Google rating, and with it‚Äîyour visibility, trust, and bookings.",
    problem_hint:
      "But here's the good news:\nWith the right mix of timing, psychology, and gamification, you can flip that script. Instantly.",

    gap_title: 'The Restaurant Review Gap',
    gap_research_intro: 'Research shows:',
    gap_stats: [
      '94% of people have avoided a restaurant after reading a negative review',
      '73% of diners ignore reviews that are older than a month',
      'If your Google rating drops below 3 stars, you lose 75% of your potential customers'
    ],
    gap_benefits_title: 'Restaurants that actively collect reviews:',
    gap_benefits: [
      'Show up more often on Google Maps (hello, SEO!)',
      'Build trust before guests even walk in',
      'Increase average spend (people will pay 15% more when they trust you)'
    ],

    spin_title: 'Spin-to-Win at Checkout? It Works.',
    spin_subtitle: 'Picture this:',
    spin_intro: 'A guest just finished their meal, smiling. You hand them the bill with a small sign that says:',
    spin_sign: '"Scan to Leave a Review & Spin to Win a Dessert, Discount, or Surprise!"',
    spin_flow: 'They scan. They smile. They review. They spin.\nSudenly, a 30-second interaction just boosted:',
    spin_benefits: [
      'Your online reputation',
      'Their emotional connection',
      'Their likelihood to return'
    ],
    spin_data_intro: "And it's backed by data:",
    spin_stats: [
      'Gamified experiences lead to 47% higher engagement',
      'Restaurants using reward-based loyalty programs see a 22% increase in return visits',
      'Offering even small incentives like a free appetizer or drink increases review volume dramatically'
    ],

    revenue_title: 'The Revenue-Review Connection',
    revenue_intro: "Let's talk numbers.",
    revenue_facts: [
      'Restaurants with 80+ Google reviews earn 54% more than the average.',
      "With 200+ reviews? You're doubling the revenue of your competitors."
    ],
    revenue_best_part: "And here's the best part:",
    revenue_hint:
      "You don't need to \"buy\" reviews. You just need to reward the act of reviewing, honestly and ethically.",
    revenue_tip_intro: 'Pro tip:',
    revenue_tip:
      'Use wording like\n"Leave us an honest review and spin the wheel ‚Äì every reviewer wins!"\nGoogle-compliant, yet still powerful.',

    psychology_title: 'Why It Works: Restaurant Psychology',
    psychology_intro: 'Diners are driven by:',
    psychology_factors: [
      'Desire for rewards ‚Äì a free dessert? Count me in.',
      "Reciprocity ‚Äì they just had great service, now they're happy to give back.",
      'Altruism ‚Äì they want others to discover your place too.'
    ],
    psychology_closing:
      'Gamification taps into all three. A simple spin-the-wheel adds that final dopamine rush to an already positive experience. And people love to share good vibes.',

    features_title: 'What You Get with Review to Revenue',
    features_list: [
      'A fully gamified Google review funnel',
      'Easy-to-scan QR codes placed at tables, checkout, or receipts',
      'Real-time reward system with spin-the-wheel logic',
      "Transparent review incentives (compliant with Google's policy)",
      'Higher visibility, more foot traffic, and more repeat guests'
    ],

    qr_title: 'üìà How to Maximize QR Codes in Your Restaurant',
    qr_subtitle:
      'Ready to see the most effective ways top restaurants are boosting reviews and rebookings? Dive into our step-by-step best practices.',
    qr_button: 'Explore Restaurant Best Practices',

    templates_title: 'Ready-Made Wheel Templates for Restaurants',
    card_1_title: 'Lunch Loyalty Spin',
    card_1_text: 'Snag weekday-lunch reviews and tempt guests back within two weeks.',
    card_1_stats: ['Use within: 14 days', 'Need: 4‚òÖ review', 'Top win: Free 2-course dinner for two'],
    card_2_title: 'Weekend Brunch Boost',
    card_2_text: 'Ride the Sat‚ÄìSun buzz for 5‚òÖ reviews and extra drink sales.',
    card_2_stats: ['Use within: 7 days', 'Need: 4‚òÖ review', 'Top win: Bottomless Mimosa Brunch for two'],
    card_3_title: 'Seasonal Delight Wheel',
    card_3_text: 'Show off your new seasonal menu and keep diners coming back.',
    card_3_stats: ['Use within: 21 days', 'Need: 4‚òÖ review', "Top win: Chef's tasting menu for two"],
    preview_template: 'Preview full template',

    cta_title: 'üöÄ Ready to Turn Your Tables into Traffic?',
    cta_text:
      "Don't leave reviews to chance. Turn your happiest moments into lasting visibility‚Äîand revenue.",
    cta_button: 'Start Your Free Trial',
    cta_note: 'No credit card needed'
  },

  hu: {
    title: '√âttermek',
    subtitle: 'Ford√≠tsd az el√©gedett vend√©geket 5 csillagos marketingg√©',
    intro:
      'Hi√°ba t√∂k√©letes az √©tel √©s a kiszolg√°l√°s ‚Äì ha kev√©s a v√©lem√©ny r√≥lad online, l√°thatatlan vagy a t√©rk√©pen.',

    problem_title: 'A probl√©ma?',
    problem_text:
      'Az el√©gedett vend√©gek ritk√°n √≠rnak v√©lem√©nyt magukt√≥l. Az el√©gedetlenek viszont ann√°l ink√°bb. Ez torz√≠tja a Google √©rt√©kel√©st ‚Äì √©s ezzel cs√∂kken a l√°that√≥s√°g, a bizalom, a forgalom.',
    problem_hint:
      'A j√≥ h√≠r?\nEgy kis pszichol√≥gia, j√≥ id≈ëz√≠t√©s √©s j√°t√©kos√≠t√°s ‚Äì √©s m√°ris fordul a kocka.',

    gap_title: 'Az √âttermi V√©lem√©ny-R√©s',
    gap_research_intro: 'A kutat√°sok azt mutatj√°k:',
    gap_stats: [
      'Az emberek 94%-a nem megy olyan helyre, ahol negat√≠v v√©lem√©nyt olvasott',
      'A vend√©gek 73%-a figyelmen k√≠v√ºl hagyja az 1 h√≥napn√°l r√©gebbi √©rt√©kel√©seket',
      'Ha 4 csillag al√° esel a Google-on, a potenci√°lis vend√©geid 75%-√°t elvesz√≠ted'
    ],
    gap_benefits_title: 'Azok az √©ttermek, akik akt√≠van gy≈±jtenek v√©lem√©nyt:',
    gap_benefits: [
      'Gyakrabban jelennek meg a Google T√©rk√©pen (SEO!)',
      'Bizalmat keltenek m√©g a bel√©p√©s el≈ëtt',
      'A vend√©gek √°tlagosan 15%-kal t√∂bbet k√∂ltenek n√°luk'
    ],

    spin_title: 'P√∂rget√©s fizet√©skor? M≈±k√∂dik.',
    spin_subtitle: 'K√©pzeld el:',
    spin_intro: 'Egy vend√©g most fejezte be az √©tkez√©st, mosolyog. Odaadod a sz√°ml√°t egy kis t√°bl√°val:',
    spin_sign: '"√çrj v√©lem√©nyt √©s p√∂rgess egy desszert√©rt, kedvezm√©ny√©rt vagy meglepet√©s√©rt!"',
    spin_flow: 'Beolvassa. Mosolyog. √çr. P√∂rget.\nEgy 30 m√°sodperces interakci√≥ megemelte:',
    spin_benefits: ['Az online h√≠rnevet', 'Az √©rzelmi kapcsolatot', 'A visszat√©r√©s val√≥sz√≠n≈±s√©g√©t'],
    spin_data_intro: '√âs az adatok is t√°masztj√°k:',
    spin_stats: [
      'A j√°t√©kos megk√∂zel√≠t√©s 47%-kal t√∂bb aktivit√°st hoz',
      'A jutalmaz√≥ rendszert haszn√°l√≥ √©ttermekn√©l 22%-kal t√∂bben t√©rnek vissza',
      'M√©g egy kis jutalom is (pl. el≈ë√©tel) jelent≈ësen n√∂veli a v√©lem√©nyek sz√°m√°t'
    ],

    revenue_title: 'Bev√©tel √©s V√©lem√©nyek kapcsolata',
    revenue_intro: 'Besz√©lj√ºnk sz√°mokr√≥l.',
    revenue_facts: [
      'Akiknek 280+ Google v√©lem√©nye van, 54%-kal t√∂bbet keresnek az √°tlagn√°l.',
      '500+ v√©lem√©nyn√©l a bev√©tel megdupl√°z√≥dik a versenyt√°rsakhoz k√©pest.'
    ],
    revenue_best_part: '√âs itt j√∂n a legjobb r√©sz:',
    revenue_hint:
      'Nem kell ‚Äûvenni" a v√©lem√©nyt. El√©g megjutalmazni azt, aki √≠r ‚Äì etikusan √©s ≈ëszint√©n.',
    revenue_tip_intro: 'Profi tipp:',
    revenue_tip:
      '√çgy fogalmazz:\n"√çrj ≈ëszinte v√©lem√©nyt √©s p√∂rgess ‚Äì mindenki nyer!"\nGoogle-kompatibilis, m√©gis √ºt≈ës.',

    psychology_title: 'Mi√©rt m≈±k√∂dik: √âttermi pszichol√≥gia',
    psychology_intro: 'A vend√©geket ez mozgatja:',
    psychology_factors: [
      'V√°gynak a jutalomra ‚Äì egy desszert? J√∂het!',
      'Viszonz√°s ‚Äì j√≥ √©lm√©ny ut√°n sz√≠vesen adnak vissza valamit - mondjuk egy √©rt√©kel√©st',
      'Altruizmus ‚Äì m√°sokkal is meg akarj√°k osztani a felfedez√©st'
    ],
    psychology_closing:
      'A j√°t√©kos√≠t√°s mindh√°rom pszich√©s gombot megnyomja. Egy kis p√∂rget√©s a v√©g√©n √©s m√°ris eml√©kezetes az √©lm√©ny. √âs ezt sz√≠vesen meg is osztj√°k.',

    features_title: 'Mit kapsz a Review to Revenue-t√≥l?',
    features_list: [
      'Teljes j√°t√©kos√≠tott v√©lem√©nygy≈±jt≈ë rendszer',
      'Asztalra, blokkra vagy kassz√°ra helyezhet≈ë QR-k√≥dok',
      'Val√≥s idej≈± nyerem√©nyek p√∂rget√©s logik√°val',
      '√Åtl√°that√≥ √∂szt√∂nz≈ëk (Google-szab√°lyoknak megfelel)',
      'T√∂bb l√°that√≥s√°g, t√∂bb vend√©g √©s t√∂bb bev√©tel'
    ],

    qr_title: 'üìà √çgy Haszn√°ld a QR-k√≥dokat az √âttermedben',
    qr_subtitle:
      'Szeretn√©d megtudni, hogyan gy≈±jtenek v√©lem√©nyt √©s visszat√©r≈ë vend√©geket a legjobb helyek? N√©zd meg a l√©p√©sr≈ël-l√©p√©sre √∫tmutat√≥nkat.',
    qr_button: '√âttermeknek sz√≥l√≥ tippek',

    templates_title: 'K√©sz Sablonok √âttermeknek',
    card_1_title: 'Eb√©did≈ës √ârt√©kel√©s gy≈±jt√©s',
    card_1_text: 'Eb√©did≈ëben √©rt√©kel√©seket gy≈±jtesz √©s 2 h√©ten bel√ºl visszacs√°b√≠tod ≈ëket.',
    card_1_stats: ['Felhaszn√°l√°s: 14 nap', 'Sz√ºks√©ges: 4‚òÖ v√©lem√©ny', 'F≈ëd√≠j: 2 fog√°sos vacsora 2 f≈ë r√©sz√©re'],
    card_2_title: 'H√©tv√©gi Brunch Boost',
    card_2_text: 'Szombat‚Äìvas√°rnapi p√∂rg√©s, extra italforgalom, 5‚òÖ v√©lem√©nyek.',
    card_2_stats: ['Felhaszn√°l√°s: 7 nap', 'Sz√ºks√©ges: 4‚òÖ v√©lem√©ny', 'F≈ëd√≠j: Korl√°tlan Mim√≥za Brunch 2 f≈ëre'],
    card_3_title: 'Szezon√°lis Finoms√°g',
    card_3_text: 'Mutasd be az √∫j szezon√°lis men√ºt √©s n√∂veld a visszat√©r√©seket.',
    card_3_stats: ['Felhaszn√°l√°s: 21 nap', 'Sz√ºks√©ges: 4‚òÖ v√©lem√©ny', 'F≈ëd√≠j: S√©f k√≥stol√≥ men√º 2 f≈ëre'],
    preview_template: 'Megn√©zem a sablont',

    cta_title: 'üöÄ K√©szen √°llsz, hogy az √©rt√©kel√©sekb≈ël forgalom legyen?',
    cta_text:
      'Ne b√≠zd a v√©lem√©nyeket a v√©letlenre. V√°ltsd vissza ≈ëket l√°that√≥s√°gra ‚Äì √©s bev√©telre.',
    cta_button: 'Pr√≥b√°ld ki ingyen',
    cta_note: 'Bankk√°rtya sem sz√ºks√©ges'
  }
};

export default function RestaurantPage() {
  const { language } = useLanguage();
  const t = restaurantPageTranslations[language];

  return (
    <div className="min-h-screen bg-white flex flex-col">
      <PublicNavBar />

      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-orange-50 to-yellow-50 py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            className="max-w-3xl"
          >
            <span className="inline-flex items-center text-2xl mb-4">
              üçΩÔ∏è {t.title}
            </span>
            <h1 className="text-4xl sm:text-5xl font-bold text-gray-900 mb-6">
              {t.subtitle}
            </h1>
            <p className="text-xl text-gray-600">
              {t.intro}
            </p>
          </motion.div>
        </div>

        {/* Background decoration */}
        <div className="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
          <div className="absolute -top-1/2 -right-1/4 w-96 h-96 bg-orange-100 rounded-full opacity-20 blur-3xl" />
          <div className="absolute -bottom-1/4 -left-1/4 w-96 h-96 bg-yellow-100 rounded-full opacity-20 blur-3xl" />
        </div>
      </section>

      {/* Problem Statement */}
      <section className="py-16 bg-white">
        <div className="max-w-4xl mx-auto px-4">
          <div className="prose prose-lg">
            <div className="mb-12">
              <h2 className="text-2xl font-bold text-gray-900 mb-4">{t.problem_title}</h2>
              <p className="text-gray-600">
                {t.problem_text}
              </p>
              <p className="text-gray-600 font-medium whitespace-pre-line">
                {t.problem_hint}
              </p>
            </div>

            <div className="bg-gray-50 p-8 rounded-xl mb-12">
              <h2 className="flex items-center gap-2 text-2xl font-bold text-gray-900 mb-6">
                <Trophy className="w-6 h-6 text-orange-500" />
                {t.gap_title}
              </h2>
              
              <div className="mb-8">
                <p className="font-medium mb-4">{t.gap_research_intro}</p>
                <ul className="space-y-2">
                  {t.gap_stats.map((stat, index) => (
                    <li key={index} className="flex items-start gap-2">
                      <span className="text-red-500">‚Ä¢</span>
                      {stat}
                    </li>
                  ))}
                </ul>
              </div>

              <p className="font-medium mb-4">{t.gap_benefits_title}</p>
              <ul className="space-y-2">
                {t.gap_benefits.map((benefit, index) => (
                  <li key={index} className="flex items-start gap-2">
                    <span className="text-green-500">‚Ä¢</span>
                    {benefit}
                  </li>
                ))}
              </ul>
            </div>

            <div className="mb-12">
              <h2 className="flex items-center gap-2 text-2xl font-bold text-gray-900 mb-6">
                <Star className="w-6 h-6 text-yellow-500" />
                {t.spin_title}
              </h2>

              <div className="bg-blue-50 p-6 rounded-lg mb-6">
                <p className="font-medium mb-2">{t.spin_subtitle}</p>
                <p>{t.spin_intro}</p>
                <p className="text-lg font-medium my-4 text-blue-900">
                  üëâ {t.spin_sign}
                </p>
              </div>

              <p className="mb-6 whitespace-pre-line">
                {t.spin_flow}
              </p>

              <ul className="space-y-2 mb-6">
                {t.spin_benefits.map((benefit, index) => (
                  <li key={index} className="flex items-start gap-2">
                    <span className="text-blue-500">‚Ä¢</span>
                    {benefit}
                  </li>
                ))}
              </ul>

              <div className="bg-gray-50 p-6 rounded-lg">
                <p className="font-medium mb-4">{t.spin_data_intro}</p>
                <ul className="space-y-2">
                  {t.spin_stats.map((stat, index) => (
                    <li key={index}>‚Ä¢ {stat}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div className="mb-12">
              <h2 className="flex items-center gap-2 text-2xl font-bold text-gray-900 mb-6">
                <TrendingUp className="w-6 h-6 text-green-500" />
                {t.revenue_title}
              </h2>

              <p className="text-xl mb-4">{t.revenue_intro}</p>
              <div className="bg-green-50 p-6 rounded-lg mb-6">
                <ul className="space-y-4">
                  {t.revenue_facts.map((fact, index) => (
                    <li key={index} className="flex items-center gap-2">
                      <DollarSign className="w-5 h-5 text-green-600" />
                      {fact}
                    </li>
                  ))}
                </ul>
              </div>

              <p className="font-medium mb-2">{t.revenue_best_part}</p>
              <p>{t.revenue_hint}</p>

              <div className="bg-yellow-50 p-6 rounded-lg mt-6">
                <p className="flex items-center gap-2 font-medium mb-2">
                  <span>üí°</span> {t.revenue_tip_intro}
                </p>
                <p className="whitespace-pre-line">
                  {t.revenue_tip}
                </p>
              </div>
            </div>

            <div className="mb-12">
              <h2 className="flex items-center gap-2 text-2xl font-bold text-gray-900 mb-6">
                <Smile className="w-6 h-6 text-purple-500" />
                {t.psychology_title}
              </h2>

              <p className="mb-4">{t.psychology_intro}</p>
              <ul className="space-y-4 mb-6">
                {t.psychology_factors.map((factor, index) => (
                  <li key={index} className="flex items-start gap-2">
                    <span className="text-purple-500">‚Ä¢</span>
                    <strong>{factor}</strong>
                  </li>
                ))}
              </ul>

              <p>
                {t.psychology_closing}
              </p>
            </div>

            <div className="bg-blue-50 p-8 rounded-xl mb-12">
              <h2 className="flex items-center gap-2 text-2xl font-bold text-gray-900 mb-6">
                <span>‚úÖ</span> {t.features_title}
              </h2>

              <ul className="space-y-4">
                {t.features_list.map((feature, index) => (
                  <li key={index} className="flex items-start gap-2">
                    <span className="text-green-500">‚Ä¢</span>
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* QR Code Best Practices Section */}
      <section className="py-16 bg-yellow-50 border-t border-yellow-100">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-3xl font-bold text-gray-900 mb-4"
          >
            {t.qr_title}
          </motion.h2>
          <p className="text-lg text-gray-700 mb-8">
            {t.qr_subtitle}
          </p>
          <Link
            to="/use-cases/restaurants/qr-strategy"
            className="inline-flex items-center px-6 py-3 rounded-lg bg-orange-600 text-white font-semibold
                     hover:bg-orange-700 transition transform hover:scale-105 shadow"
          >
            {t.qr_button}
            <ArrowRight className="w-4 h-4 ml-2" />
          </Link>
        </div>
      </section>

      {/* Wheel-of-Fortune Template Gallery */}
      <section className="py-20 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-3xl sm:text-4xl font-bold text-gray-900 text-center mb-12"
          >
            {t.templates_title}
          </motion.h2>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-10">
            {/* === CARD 1 === */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ delay: 0.05 }}
              className="bg-white rounded-xl shadow-lg p-8 flex flex-col"
            >
              <h3 className="text-xl font-semibold text-orange-600 mb-2">
                {t.card_1_title}
              </h3>
              <p className="text-gray-600 mb-4 flex-grow">
                {t.card_1_text}
              </p>

              <ul className="text-sm text-gray-700 mb-6 space-y-1">
                {t.card_1_stats.map((stat, index) => (
                  <li key={index}>‚Ä¢ <span className="font-medium">{stat}</span></li>
                ))}
              </ul>

              <Link
                to="/templates/restaurant/lunch-loyalty-spin/v1.0"
                className="mt-auto inline-flex items-center justify-center px-6 py-3
                           rounded-lg bg-orange-600 text-white font-semibold
                           hover:bg-orange-700 transition"
              >
                {t.preview_template}
                <ArrowRight className="w-4 h-4 ml-1" />
              </Link>
            </motion.div>

            {/* === CARD 2 === */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ delay: 0.1 }}
              className="bg-white rounded-xl shadow-lg p-8 flex flex-col"
            >
              <h3 className="text-xl font-semibold text-yellow-600 mb-2">
                {t.card_2_title}
              </h3>
              <p className="text-gray-600 mb-4 flex-grow">
                {t.card_2_text}
              </p>

              <ul className="text-sm text-gray-700 mb-6 space-y-1">
                {t.card_2_stats.map((stat, index) => (
                  <li key={index}>‚Ä¢ <span className="font-medium">{stat}</span></li>
                ))}
              </ul>

              <Link
                to="/templates/restaurant/weekend-brunch-boost/v1.0"
                className="mt-auto inline-flex items-center justify-center px-6 py-3
                           rounded-lg bg-yellow-500 text-white font-semibold
                           hover:bg-yellow-600 transition"
              >
                {t.preview_template}
                <ArrowRight className="w-4 h-4 ml-1" />
              </Link>
            </motion.div>

            {/* === CARD 3 === */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ delay: 0.15 }}
              className="bg-white rounded-xl shadow-lg p-8 flex flex-col"
            >
              <h3 className="text-xl font-semibold text-green-700 mb-2">
                {t.card_3_title}
              </h3>
              <p className="text-gray-600 mb-4 flex-grow">
                {t.card_3_text}
              </p>

              <ul className="text-sm text-gray-700 mb-6 space-y-1">
                {t.card_3_stats.map((stat, index) => (
                  <li key={index}>‚Ä¢ <span className="font-medium">{stat}</span></li>
                ))}
              </ul>

              <Link
                to="/templates/restaurant/seasonal-delight-wheel/v1.0"
                className="mt-auto inline-flex items-center justify-center px-6 py-3
                           rounded-lg bg-green-600 text-white font-semibold
                           hover:bg-green-700 transition"
              >
                {t.preview_template}
                <ArrowRight className="w-4 h-4 ml-1" />
              </Link>
            </motion.div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-br from-orange-600 to-yellow-600 text-white">
        <motion.div 
          className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
        >
          <h2 className="text-4xl font-bold mb-4">{t.cta_title}</h2>
          <p className="text-xl text-orange-100 mb-8">
            {t.cta_text}
          </p>
          <Link
            to="https://reviewtorevenue.io/auth"
            className="inline-flex items-center px-8 py-4 rounded-xl bg-white text-orange-600 font-semibold text-lg
                     hover:bg-orange-50 transform transition-all hover:scale-105 shadow-lg group"
          >
            {t.cta_button}
            <ArrowRight className="w-5 h-5 ml-2 transform transition-transform group-hover:translate-x-1" />
          </Link>
          <p className="text-sm text-orange-100 mt-4">{t.cta_note}</p>
        </motion.div>
      </section>

      <Footer />
    </div>
  );
}